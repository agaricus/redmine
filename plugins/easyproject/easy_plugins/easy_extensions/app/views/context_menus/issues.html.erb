<ul>
  <%= call_hook(:view_issues_context_menu_start, {:issues => @issues, :can => @can, :back => @back }) %>

  <% if @issue -%>
    <li><%= context_menu_link l(:button_update), {:controller => 'issues', :action => 'edit', :id => @issue},
        :class => 'icon icon-edit', :disabled => !(@can[:edit] || @can[:edit_basic_attrs]) %></li>
  <% else %>
    <li><%= context_menu_link l(:button_update), bulk_edit_issues_path(:ids => @issue_ids, :back_url => @back),
        :class => 'icon icon-edit', :disabled => !(@can[:edit] || @can[:edit_basic_attrs]) %></li>
  <% end %>
  <% if @easy_issue_timer_setting && @easy_issue_timer_setting.is_a?(Hash) %>
    <li><%= context_menu_link(@easy_issue_timer_setting[:label], @easy_issue_timer_setting[:url], :class => "icon #{@easy_issue_timer_setting[:icon]}", :method => :post) %></li>
  <% end -%>

  <% if @allowed_statuses.present? %>
    <li class="folder">
      <a href="#" class="submenu icon icon-issue-status" onclick="return false;"><%= l(:field_status) %></a>
      <ul>
        <% @allowed_statuses.each do |s| -%>
          <li><%= context_menu_link s.name, bulk_update_issues_path(:ids => @issue_ids, :issue => {:status_id => s}, :back_url => @back), :method => :post,
              :selected => (@issue && s == @issue.status), :disabled => !((@can[:update] || @can[:edit_basic_attrs]) && @allowed_statuses.include?(s)), :confirm => (@subtasks_to_close && s.is_closed? && @subtasks_to_close > 0 ? l(:text_issues_close_descendants_confirmation, :count => @subtasks_to_close) : nil) %></li>
        <% end -%>
      </ul>
    </li>
  <% end %>

  <% if !@trackers.nil? && @trackers.size > 1 %>
    <li class="folder">
      <a href="#" class="submenu icon icon-tracker"><%= l(:field_tracker) %></a>
      <ul>
        <% @trackers.each do |t| -%>
          <li><%= context_menu_link t.name, bulk_update_issues_path(:ids => @issue_ids, :issue => {'tracker_id' => t}, :back_url => @back), :method => :post,
              :selected => (@issue && t == @issue.tracker), :disabled => !@can[:edit] %></li>
        <% end -%>
      </ul>
    </li>
  <% end %>

  <% if @safe_attributes.include?('priority_id') && @priorities.present? -%>
    <li class="folder">
      <a href="#" class="submenu icon icon-list"><%= l(:field_priority) %></a>
      <ul>
        <% @priorities.each do |p| -%>
          <li><%= context_menu_link p.name, {:controller => 'issues', :action => 'bulk_update', :ids => @issue_ids, :issue => {'priority_id' => p}, :back_url => @back}, :method => :post,
              :selected => (@issue && p == @issue.priority), :disabled => (!@can[:edit] || @issues.detect {|i| !i.leaf?}) %></li>
        <% end -%>
      </ul>
    </li>
  <% end %>

  <% if @safe_attributes.include?('fixed_version_id') && @versions.present? -%>
    <li class="folder">
      <a href="#" class="submenu icon icon-stack"><%= l(:field_fixed_version) %></a>
      <ul>
        <% @versions.sort.each do |v| -%>
          <li><%= context_menu_link format_version_name(v), bulk_update_issues_path(:ids => @issue_ids, :issue => {'fixed_version_id' => v}, :back_url => @back), :method => :post,
              :selected => (@issue && v == @issue.fixed_version), :disabled => !@can[:update] %></li>
        <% end -%>
        <li><%= context_menu_link l(:label_none), bulk_update_issues_path(:ids => @issue_ids, :issue => {'fixed_version_id' => 'none'}, :back_url => @back), :method => :post,
            :selected => (@issue && @issue.fixed_version.nil?), :disabled => !@can[:update] %></li>
      </ul>
    </li>
  <% end -%>

  <% if @safe_attributes.include?('assigned_to_id') && @assignables.present? -%>
    <li class="folder">
      <a href="#" class="submenu icon icon-user"><%= l(:field_assigned_to) %></a>
      <ul>
        <% if @assignables.include?(User.current) %>
          <li><%= context_menu_link "<< #{l(:label_me)} >>", bulk_update_issues_path(:ids => @issue_ids, :issue => {'assigned_to_id' => User.current}, :back_url => @back), :method => :post,
              :disabled => !@can[:update] %></li>
        <% end %>
        <% @assignables.each do |u| -%>
          <li><%= context_menu_link h(u.name), bulk_update_issues_path(:ids => @issue_ids, :issue => {'assigned_to_id' => u}, :back_url => @back), :method => :post,
              :selected => (@issue && u == @issue.assigned_to), :disabled => !@can[:update] %></li>
        <% end -%>
        <li><%= context_menu_link l(:label_nobody), bulk_update_issues_path(:ids => @issue_ids, :issue => {'assigned_to_id' => 'none'}, :back_url => @back), :method => :post,
            :selected => (@issue && @issue.assigned_to.nil?), :disabled => !@can[:update] %></li>
      </ul>
    </li>
  <% end %>

  <% if @safe_attributes.include?('author_id') -%>
    <li class="folder">
      <a href="#" class="submenu icon icon-user"><%= l(:field_author) %></a>
      <ul>
        <li><%= context_menu_link "<< #{l(:label_me)} >>", bulk_update_issues_path(:ids => @issue_ids, :issue => {'author_id' => User.current}, :back_url => @back), :method => :post,
            :disabled => !@can[:update] %></li>
        <% @available_authors.each do |user| -%>
          <li><%= context_menu_link h(user.name), bulk_update_issues_path(:ids => @issue_ids, :issue => {'author_id' => user}, :back_url => @back), :method => :post,
              :selected => (@issue && user == @issue.author), :disabled => !@can[:update] %></li>
        <% end %>
      </ul>
    </li>
  <% end %>

  <% if @safe_attributes.include?('category_id') && @project && @project.issue_categories.any? -%>
    <li class="folder">
      <a href="#" class="submenu"><%= l(:field_category) %></a>
      <ul>
        <% issue_category_tree_with_level_and_name_prefix(@project.issue_categories) do |cat, lvl, prefix| -%>
          <li><%= context_menu_link h(prefix + cat.name), bulk_update_issues_path(:ids => @issue_ids, :issue => {'category_id' => cat}, :back_url => @back), :method => :post,
              :selected => (@issue && cat == @issue.category), :disabled => !@can[:update] %></li>
        <% end %>
        <li><%= context_menu_link l(:label_none), bulk_update_issues_path(:ids => @issue_ids, :issue => {'category_id' => 'none'}, :back_url => @back), :method => :post,
            :selected => (@issue && @issue.category.nil?), :disabled => !@can[:update] %></li>
      </ul>
    </li>
  <% end -%>

  <% if Issue.use_field_for_done_ratio? %>
    <li class="folder">
      <a href="#" class="submenu"><%= l(:field_done_ratio) %></a>
      <ul>
        <% (0..10).map{|x|x*10}.each do |p| -%>
          <li><%= context_menu_link "#{p}%", bulk_update_issues_path(:ids => @issue_ids, :issue => {'done_ratio' => p}, :back_url => @back), :method => :post,
              :selected => (@issue && p == @issue.done_ratio), :disabled => (!@can[:edit] || @issues.detect {|i| !i.leaf?}) %></li>
        <% end -%>
      </ul>
    </li>
  <% end %>

  <% @options_by_custom_field.each do |field, options| %>
    <li class="folder cf_<%= field.id %>">
      <a href="#" class="submenu"><%= h(field.name) %></a>
      <ul>
        <% options.each do |text, value| %>
          <li><%= bulk_update_custom_field_context_menu_link(field, text, value || text) %></li>
        <% end %>
        <% unless field.is_required? %>
          <li><%= bulk_update_custom_field_context_menu_link(field, l(:label_none), '__none__') %></li>
        <% end %>
      </ul>
    </li>
  <% end %>

  <% if User.current.logged? %>
    <li><%= watcher_link(@issues, User.current) %></li>
  <% end %>

  <% if @issue.present? %>
    <% if @can[:log_time] -%>
      <li><%= context_menu_link l(:button_log_time), new_issue_time_entry_path(@issue),
          :class => 'icon icon-time-add' %></li>
    <% end %>
    <li><%= context_menu_link l(:button_copy), project_copy_issue_path(@project, @issue),
        :class => 'icon icon-copy', :disabled => !@can[:copy] %></li>
  <% else %>
    <li><%= context_menu_link l(:button_copy), bulk_edit_issues_path(:ids => @issue_ids, :copy => '1'),
        :class => 'icon icon-copy', :disabled => !@can[:move] %></li>
  <% end %>
  <li><%= context_menu_link l(:button_delete), issues_path(:ids => @issue_ids, :back_url => @back),
      :method => :delete, :data => {:confirm => issues_destroy_confirmation_message(@issues)}, :class => 'icon icon-del', :disabled => !@can[:delete] %></li>

  <%= call_hook(:view_issues_context_menu_end, {:issue => @issue, :issues => @issues, :can => @can, :back => @back, :project => @project, :ids => @issue_ids }) %>
</ul>
