<%= error_messages_for 'project' %>
<div class="box tabular">
  <div class="<%= @project.new_record? ? '' : 'grid_9 alpha omega' %>">

    <p>
      <%= f.text_field :name, :required => true, :autofocus => true %>&nbsp;<em><%= l(:text_caracters_maximum, 255) %></em>
    </p>
    <% if @project.allowed_parents_scope.any? %>
      <p>
        <%= label(:project, :parent_id, l(:field_parent)) %><%= parent_project_select_tag(@project) %>
      </p>
    <% end -%>
    <p class="description">
      <%= f.text_area :description, :rows => 8, :class => 'wiki-edit' %>
    </p>
    <%= wikitoolbar_for 'project_description' %>
    <% if EasySetting.value('project_display_identifiers') -%>
      <p>
        <%= f.text_field :identifier, :required => true, :size => 60, :disabled => @project.identifier_frozen?, :maxlength => Project::IDENTIFIER_MAX_LENGTH %>
        <% unless @project.identifier_frozen? %>
          <br />
          <em>
            <%= l(:text_length_between, :min => 1, :max => Project::IDENTIFIER_MAX_LENGTH) %> <%= l(:text_project_identifier_info).html_safe %>
          </em>
        <% end %>
      </p>
    <% end -%>
    <p style="display:none">
      <%= f.text_field :homepage %>
    </p>
    <p class="project-author">
      <%= f.select :author_id, User.active.non_system_flag.easy_type_internal.sorted.collect{|u| [u.name, u.id]}, :include_blank => true %>
    </p>
    <% unless EasySetting.value('project_calculate_start_date') %>
      <p>
        <%= f.text_field :easy_start_date, :size => 10 %><%= calendar_for('project_easy_start_date') %>
      </p>
    <% end %>
    <% unless EasySetting.value('project_calculate_due_date') %>
      <p>
        <%= f.text_field :easy_due_date, :size => 10 %><%= calendar_for('project_easy_due_date') %>
      </p>
    <% end %>
    <p>
      <%= f.check_box :is_public %>
    </p>
    <p>
      <%= f.check_box :is_planned, :onchange => '$(\'#send_all_planned_emails_container\').toggle()' %><em><%= l(:text_project_is_planned) %></em>
    </p>
    <% if @project.status == Project::STATUS_PLANNED %>
      <p id="send_all_planned_emails_container" style="display:none">
        <%= f.check_box :send_all_planned_emails %>
      </p>
    <% end %>
    <% if @project.safe_attribute? 'inherit_members' %>
      <p>
        <%= f.check_box :inherit_members %>
      </p>
    <% end %>

    <%= call_hook(:view_projects_form_above_custom_fields, :project => @project, :form => f) %>

    <div id="form-project-custom-fields">
      <%= render :partial => 'projects/form_project_custom_fields', :locals => {:custom_field_values => @project.custom_field_values, :project => @project } -%>
    </div>

    <%= call_hook(:view_projects_form, :project => @project, :form => f) %>

  </div>
  <% if !@project.new_record? %>
    <div class="project-action-container grid_3 alpha omega">
      <% if @project.easy_is_easy_template?%>
        <%= link_to(l(:button_create_project_from_template), { :controller => 'templates', :action => 'show_create_project', :id => @project }, :class => 'button-2', :title => l(:title_button_template_create_project)) -%>
      <% else %>
        <%= link_to_project_archive(@project, :class => 'button-2 icon icon-archive') if !@project.archived? && User.current.allowed_to?(:archive_project, @project) -%>
        <%= link_to_project_unarchive(@project, :class => 'button-2 icon icon-unlock') if @project.archived? && (@project.parent.nil? || @project.parent.active?) && User.current.allowed_to?(:archive_project, @project) -%>
        <%= link_to_project_close(@project, :class => 'button-2 icon icon-lock') if @project.active? && User.current.allowed_to?(:close_project, @project) -%>
        <%= link_to_project_reopen(@project, :class => 'button-2 icon icon-unlock') if (@project.status == Project::STATUS_CLOSED) && User.current.allowed_to?(:close_project, @project) -%>
        <%= link_to_project_copy(@project, :class => 'button-2 icon icon-copy') if User.current.allowed_to?(:copy_project, @project) && @project.active? -%>
        <%= link_to_project_delete(@project, :class => 'button-2 icon icon-del') if User.current.allowed_to?(:delete_project, @project) -%>
        <%= link_to_project_new_subproject(@project, :class => 'button-2 icon icon-add') if User.current.allowed_to?(:add_subprojects, @project) -%>
        <%= link_to_project_new_template_from_project(@project, :class => 'button-2 button-new-template-from-project icon-gradient') if (User.current.admin? || User.current.allowed_to?(:create_project_template, @project)) -%>
        <%= link_to(l(:button_project_mass_copy), { :controller => 'project_mass_copy', :action => 'select_source_project' }, :class => 'button-2 icon icon-copy') %>
      <% end %>
    </div>
    <div class="clear"></div>
  <% end %>
</div>
<% if !@project.new_record? %>
  <%= toggling_container('project-easy-journal-history', User.current, {:heading => l(:label_history), :default_button_state => false}) do -%>
    <%= easy_journal_render_history(@journals, {:collapsible => false, :entity => @project}) -%>
    <p>
      <%= label_tag :notes, l(:label_comment) %>
      <%= text_area_tag :notes, '', :cols => 60, :rows => 10 %>
      <%= wikitoolbar_for('notes')%>
    </p>
  <% end %>
<% end %>
<div id="relations">
  <%= render :partial => 'projects/relations', :locals => {:f => f} -%>
</div>
<%= call_hook(:view_projects_form_below_relations, :project => @project, :form => f) %>
<% unless @project_custom_fields.empty? %>
  <fieldset class="box"><legend><%=l(:label_project_custom_fields)%></legend>
    <% @project_custom_fields.each do |custom_field| %>
      <label class="floating" id="project_issue_custom_fields">
        <%= check_box_tag 'project_custom_field_ids[]', custom_field.id,
          (@project.all_project_custom_fields.include?(custom_field)), {:id => "project_custom_field_ids_#{custom_field.id}"}.merge(custom_field.is_for_all? ? {:disabled => 'disabled', } : {}) -%>
        <script type="text/javascript">
          $("#<%= "project_custom_field_ids_#{custom_field.id}" %>").change(function() {
            $.ajax({
              url: '<%= j url_for({:controller => 'projects', :action => 'toggle_custom_fields_on_project_form', :id => (@project.new_record? ? nil : @project), :new_custom_field_id => custom_field.id}) %>',
              type: 'post',
              data: $("#project-form").serialize() + '&checked=' + $('#project_custom_field_ids_<%= custom_field.id %>').is(':checked')
            }).done(function(data) {
              $("#form-project-custom-fields").html(data);
            })
          })
        </script>
        <%= custom_field.translated_name %>
      </label>
    <% end %>
  </fieldset>
<% end %>
<% if @project.new_record? %>
  <fieldset class="box"><legend><%= l(:label_module_plural) %></legend>
    <% Redmine::AccessControl.available_project_modules.each do |m| %>
      <label class="floating">
        <%= check_box_tag 'project[enabled_module_names][]', m, @project.module_enabled?(m),
          :id => "project_enabled_module_names_#{m}" -%>
        <%= l_or_humanize(m, :prefix => "project_module_") %>
      </label>
    <% end %>
    <%= hidden_field_tag 'project[enabled_module_names][]', '' %>
  </fieldset>
<% end %>
<% unless @trackers.empty? %>
  <fieldset class="box" id="project_trackers"><legend><%=l(:label_tracker_plural)%></legend>
    <% @trackers.sort_by(&:name).each do |tracker| %>
      <label class="floating">
        <%= check_box_tag 'project[tracker_ids][]', tracker.id, @project.trackers.include?(tracker) %>
        <% if @issue_trackers_count && @issues_by_tracker && (@issue_trackers_count[tracker] || 0) > 0 %>
          <%= tracker %> (<%= link_to l(:label_project_copy_tracker_issues, :count => @issue_trackers_count[tracker]), {:controller => 'issues', :action => 'bulk_edit', :ids => @issues_by_tracker[tracker].collect(&:id), :back_url => url_for(params)}, :title => l(:title_project_copy_tracker_issues) %>)
        <% else %>
          <%= tracker %>
        <% end %>
      </label>
    <% end %>
    <%= hidden_field_tag 'project[tracker_ids][]', '' %>
  </fieldset>
<% end %>
<% unless @issue_custom_fields.empty? %>
  <fieldset class="box"><legend><%=l(:label_custom_field_plural)%></legend>
    <% @issue_custom_fields.sort_by(&:name).each do |custom_field| %>
      <label class="floating">
        <%= check_box_tag 'project[issue_custom_field_ids][]', custom_field.id, (@project.all_issue_custom_fields.include? custom_field), (custom_field.is_for_all? ? {:disabled => "disabled"} : {}) %>
        <%= custom_field.translated_name %>
      </label>
    <% end %>
    <%= hidden_field_tag 'project[issue_custom_field_ids][]', '' %>
  </fieldset>
<% end %>
<script type="text/javascript">
  shortcut.add('Alt+Shift+S', function() {
    if ($('#tab-content-info') && $('#tab-content-info').is(':visible')) {
      $('#save-project-info').click();
    }
    else if ($('#tab-content-activities') && $('#tab-content-activities').is(':visible')) {
      $('#save-project-activities').click();
    }
    else if ($('#tab-content-modules') && $('#tab-content-modules').is(':visible')) {
      $('#save-project-modules').click();
    }
  });
</script>
<% unless @project.identifier_frozen? %>
  <% content_for :header_tags do %>
    <%= javascript_include_tag 'project_identifier' %>
  <% end %>
<% end %>

<% if !User.current.admin? && @project.inherit_members? && @project.parent && User.current.member_of?(@project.parent) %>
  <script type="text/javascript">
    $(document).ready(function() {
      $("#project_inherit_members").change(function() {
        if (!$(this).is(':checked')) {
          if (!confirm("<%= j(l(:text_own_membership_delete_confirmation)) %>")) {
            $("#project_inherit_members").attr("checked", true);
          }
        }
      });
    });
  </script>
<% end %>

<%= javascript_tag do %>
  $(document).ready(function() {
  $('#project_enabled_module_names_issue_tracking').on('change', function(){
  if ($(this).attr('checked')){
  $('#project_trackers, #project_issue_custom_fields').show();
  } else {
  $('#project_trackers, #project_issue_custom_fields').hide();
  }
  }).trigger('change');
  });
<% end %>